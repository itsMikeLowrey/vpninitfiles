version: "3.8"

services:
  web:
    depends_on: [pihole, wirehuard]
    container_name: web
    image: anonindustries/example_image:latest
    ports:
    - "6969:8080/tcp"
    volumes:
      - wg-data:/app/config
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "80:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
      pihole:
        ipv4_address: 10.8.1.3
  wireguard:
    depends_on: [pihole]
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=65.20.96.160 #optional
      - SERVERPORT=51820 #optional
      - PEERS=2 #optional
      - PEERDNS=10.8.1.3 #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - PERSISTENTKEEPALIVE_PEERS= #optional
      - LOG_CONFS=true #optional
    volumes:
      - wg-data:/config
      - /lib/modules:/lib/modules #optional
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      pihole:
        ipv4_address: 10.8.1.2
networks:
  pihole:
    ipam:
      config:
        - subnet: 10.8.1.0/24
volumes:
  wg-data:
#https://wiki.archlinux.org/title/Pi-hole     dns port 53 may be overwritten on upgrade
#sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf
#echo -e '[Resolve]\nDNSStubListener=yes\n' >> /etc/systemd/resolved.conf
# systemctl restart systemd-resolved.service
# auto update https://blog.coffeebeans.at/archives/1299
# need to setup firewall
# disable logging
# disable ssh? or fail2ban or 2 factor